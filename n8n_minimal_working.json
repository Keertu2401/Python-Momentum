{
  "meta": {
    "instanceId": "n8n-momentum-strategy"
  },
  "name": "Momentum Strategy - Minimal Working",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1"
            }
          ]
        }
      },
      "id": "f8a0c1e2-3b4d-4e5f-6789-abcdef123456",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8000/run",
        "options": {
          "queryParameters": {
            "parameters": [
              {
                "name": "capital",
                "value": "100000"
              },
              {
                "name": "top_n", 
                "value": "5"
              }
            ]
          }
        }
      },
      "id": "a1b2c3d4-5e6f-7890-abcd-ef1234567890",
      "name": "Get Strategy Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process the momentum strategy response\nconst input = $input.all()[0].json;\n\n// Check if we have valid data\nif (!input || !input.summary) {\n  throw new Error('Invalid API response');\n}\n\nconst summary = input.summary;\nconst topStocks = input.top || [];\n\n// Create a simple summary\nconst result = {\n  executionDate: new Date().toISOString().split('T')[0],\n  executionTime: new Date().toISOString(),\n  totalCapital: summary.total_capital || 0,\n  selectedStocks: summary.selected_stocks || 0,\n  utilization: Math.round((summary.utilization_pct || 0) * 100) / 100,\n  avgMomentumScore: Math.round((summary.avg_momentum_score || 0) * 100) / 100,\n  topStock1: topStocks[0]?.Ticker || '',\n  topStock2: topStocks[1]?.Ticker || '',\n  topStock3: topStocks[2]?.Ticker || '',\n  status: 'SUCCESS'\n};\n\nreturn { json: result };"
      },
      "id": "b2c3d4e5-6f78-9012-3456-789abcdef012",
      "name": "Process Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Strategy Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Strategy Data": {
      "main": [
        [
          {
            "node": "Process Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-01-15T00:00:00.000Z",
  "versionId": "1"
}